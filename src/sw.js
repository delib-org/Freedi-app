import { precacheAndRoute } from 'workbox-precaching';
import { registerRoute } from 'workbox-routing';
import { NetworkFirst, StaleWhileRevalidate, CacheFirst } from 'workbox-strategies';
import { ExpirationPlugin } from 'workbox-expiration';
import { cleanupOutdatedCaches } from 'workbox-precaching';

// Clean up old service worker cache entries
cleanupOutdatedCaches();

// Precache all assets generated by the build system
// This is automatically injected by vite-plugin-pwa
precacheAndRoute(self.__WB_MANIFEST || []);

// Handle HTML files - always prefer network for the latest version
registerRoute(
  ({ request }) => request.destination === 'document',
  new NetworkFirst({
    cacheName: 'html-cache',
    plugins: [
      new ExpirationPlugin({
        maxEntries: 10,
        maxAgeSeconds: 60, // Cache HTML for only 1 minute to ensure fresh content
      }),
    ],
  })
);

// Handle JavaScript and CSS assets
registerRoute(
  ({ request }) => 
    request.destination === 'script' || 
    request.destination === 'style',
  new StaleWhileRevalidate({
    cacheName: 'static-resources',
    plugins: [
      new ExpirationPlugin({
        maxEntries: 50,
        maxAgeSeconds: 60 * 60, // 1 hour
      }),
    ],
  })
);

// Handle images with a Cache First strategy
registerRoute(
  ({ request }) => request.destination === 'image',
  new CacheFirst({
    cacheName: 'image-cache',
    plugins: [
      new ExpirationPlugin({
        maxEntries: 60,
        maxAgeSeconds: 30 * 24 * 60 * 60, // 30 days
      }),
    ],
  })
);

// Firebase API calls - always try network first
registerRoute(
  ({ url }) => 
    url.href.includes('firestore.googleapis.com') || 
    url.href.includes('firebase'),
  new NetworkFirst({
    cacheName: 'firebase-cache',
    plugins: [
      new ExpirationPlugin({
        maxEntries: 10,
        maxAgeSeconds: 60 * 5, // 5 minutes
      }),
    ],
    networkTimeoutSeconds: 10,
  })
);

// The rest of the custom service worker code will be injected
// by the vite-plugin-pwa from public/custom-sw.js